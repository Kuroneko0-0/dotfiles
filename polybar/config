;=====================================================
;
;   To learn more about how to configure Polybar
;   go to https://github.com/jaagr/polybar
;
;   The README contains alot of information
;
;=====================================================

[colors]
polar1 = #2e3440
polar2 = #3b4252
polar3 = #434c5e
polar4 = #4c566a
snow1 = #d8dee9
snow2 = #e5e9f0
snow3 = #eceff4
frost1 = #8fbcbb
frost2 = #88c0d0
frost3 = #81a1c1
frost4 = #5e81ac
aurora1 = #bf616a
aurora2 = #d08770
aurora3 = #ebcb8b
aurora4 = #a3be8c
aurora5 = #b48ead
black = #000000

[bar/workspaces]
;width = 330px
width = 100%
height = 30
;offset-x = 1%
;offset-y = 1%
radius = 3
fixed-center = true

background = ${colors.black}
foreground = ${colors.aurora5}

border-size = 6
border-color = #00000000

font-0 = Quicksand:style=Bold:size=10;2
font-1 = Fira Code Nerd Font:style=Medium:size=12;2
font-2 = Fira Code Nerd Font:style=Medium:size=6;2
font-3 = Fira Code Nerd Font:style=Medium:size=3;2

modules-left = menu i3
modules-center = xwindow
modules-right = checknet sep memory sep cpu sep alsa date powermenu

wm-restack = i3


[module/sep]
type = custom/text
content = " | "
content-foreground = #000000


[module/memory]
type = internal/memory
interval = 3
label =%mb_used% used


[module/cpu]
type = internal/cpu
; Seconds to sleep between updates
; Default: 0
interval = 3
label =   %percentage%%


[module/xwindow]
type = internal/xwindow
label = %title:0:70:...%
label-empty = Desktop
label-empty-maxlen = 70


[module/i3]
type = internal/i3

pin-workspaces = true
strip-wsnumbers = true
index-sort = true

format = <label-state> <label-mode>

label-mode = %mode%
label-mode-padding = 1
label-mode-background = ${colors.snow2}
label-mode-foreground = ${colors.aurora5}

label-focused =  %index%
label-focused-foreground = ${colors.snow1}
label-focused-background = ${colors.black}
label-focused-padding = 3

label-unfocused = %index%
label-unfocused-padding = ${self.label-focused-padding}

label-visible = %index%
label-visible-padding = ${self.label.focused-padding}

label-urgent = %index%
label-urgent-foreground = ${colors.aurora1}
label-urgent-background = ${colors.snow1}
label-urgent-padding = ${self.label.focused-padding}


[module/date]
type = internal/date
interval = 1
date = "%d/%m -"
date-alt = "%d/%m -"
time = %l:%M
time-alt = %l:%M
label = %date% %time%
label-padding = 3
label-background = ${colors.black}
label-foreground = ${colors.aurora5}



[module/alsa]
type = internal/alsa

master-soundcard = default
speaker-soundcard = default
headphone-soundcard = default

master-mixer = Master

; Optionally define speaker and headphone mixers
; Default: none
;;speaker-mixer = Speaker
; Default: none
;;headphone-mixer = Headphone

;If headphone-mixer is defined as default, use the following command to list available device controls
; $ amixer controls | sed -r "/CARD/\!d; s/.*=([0-9]+).*name='([^']+)'.*/printf '%3.0f: %s\n' '\1' '\2'/e" | sort
; You may also need to use `amixer -c # controls` as above for the mixer names
; Default: none
;;headphone-id = 9

; Use volume mapping (similar to amixer -M and alsamixer), where the increase in volume is linear to the ear
; Default: false
;;mapped = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
; interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted =  <label-muted>
; Available tokens:
;   %percentage% (default)
label-volume = %percentage%%

; Available tokens:
;   %percentage% (default
label-muted = " Muted"
;label-muted-foreground = ${color.red}

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 

; If defined, it will replace <ramp-volume> when
; headphones are plugged in to `headphone_control_numid`
; If undefined, <ramp-volume> will be used for both
; Only applies if <ramp-volume> is used
ramp-headphones-0 = 


[module/checknet]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/usr/bin/env sh -c [command]")
exec = ~/.config/polybar/scripts/check-network

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
;;exec-if = ""

; Will the script output continous content?
; Default: false
tail = true

; Seconds to sleep between updates
; Default: 2 (0 if `tail = true`)
interval = 5

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
;format-prefix = 

; Available tokens:
;   %output%
; Default: %output%
label = %output%

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/usr/bin/env sh -c [command]"
click-left = networkmanager_dmenu &
click-right = networkmanager_dmenu &
;;double-click-left = echo double left %counter%
;;double-click-middle = echo double middle %counter%
;;double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/usr/bin/env sh -c [command]"
;;scroll-up = echo scroll up %counter%
;;scroll-down = echo scroll down %counter%



[settings]
screenchange-reload = true
;compositing-background = xor
;compositing-background = screen
;compositing-foreground = source
;compositing-border = over

[global/wm]
margin-top = 5
margin-bottom = 5

[module/menu]
type = custom/text

content = "%{T2}  %{T-}%{T3} %{T-}"
content-padding = 0
content-background = ${colors.black}
content-foreground = ${colors.aurora5}

click-left = rofi -show drun


[module/powermenu]
type = custom/menu

expand-right = true

label-open = ⏼ 
label-open-background = ${colors.black}
label-open-foreground = ${colors.aurora5}
label-open-padding = 3

label-close = "%{T4} %{T-}%{T2}  %{T-}%{T4} %{T-}"
label-close-background = ${self.label-open-background}
label-close-foreground = ${self.label-open-foreground}

menu-0-0 = "%{T2}  %{T-}%{T4}  %{T-}"
menu-0-0-exec = shutdown now
menu-0-0-background = ${colors.aurora1}
menu-0-0-foreground = ${colors.snow1}

menu-0-1 = "%{T2}  %{T-}%{T4}  %{T-}"
menu-0-1-exec = reboot
menu-0-1-background = ${colors.black}
menu-0-1-foreground = ${colors.snow1}
